```text
project-root/
├── LICENSE
├── README.md
├── pyproject.toml
├── requirements.txt
├── setup.cfg
├── main.py                  # entry-point: builds example truss & launches viewer
│
├── testing/                 # pytest modules
│   ├── test_elements.py
│   ├── test_postprocessing.py
│   └── test_solver.py
│
└── visualiser/              # core renderer package
    ├── __init__.py
    │
    ├── mesh_data.py         # MeshData: normalize & buffer raw FEA data
    ├── mesh_adapter.py      # Scene + VisualData adapter → VBO/EBO, draw calls
    │
    ├── shader.py            # ShaderManager & colormap lookup texture loader
    ├── camera.py            # Camera: orbit/pan/zoom/reset + VP matrix
    ├── view_manager.py      # ViewManager: preset registry & goTo(name)
    ├── projection_manager.py# ProjectionManager: ortho/persp matrix builders
    ├── input_controller.py  # InputController: keyboard/mouse → camera/scene/etc.
    ├── hud_overlay.py       # HUDOverlay: orthographic pass for text & legends
    ├── renderer.py          # Renderer: main loop, clears, draws Scene + HUD
    │
    ├── render2d.py          # TrussViewer: 2D slice mode (for planar elements)
    ├── render3d.py          # Visualiser23: 3D wireframe & deformation overlay
    ├── visualiser23.py      # high-level wrapper over render3d + input presets
    └── viewer_app.py        # example app: ties VisualData → launch_viewer()
    │
    └── shaders/             # GLSL + colormap assets
        ├── line.vert
        ├── line.frag
        └── colormaps/
            ├── viridis.png
            └── plasma.png
```
